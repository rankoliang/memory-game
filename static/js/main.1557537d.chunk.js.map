{"version":3,"sources":["config.js","components/card.js","components/cards.js","components/scores.js","helpers.js","components/game.js","App.js","reportWebVitals.js","index.js"],"names":["title","heading","cards","img","src","alt","caption","StyledCard","styled","button","StyledAspectRatio","AspectRatio","Card","onClick","cardEl","useRef","aria-label","onMouseEnter","current","focus","onMouseLeave","blur","ref","ratio","draggable","StyledCards","div","Cards","selectCard","props","map","card","index","StyledScores","StyledBaseScore","StyledScore","animate","StyledHighScore","StyledGameOver","StyledWinMessage","Scores","score","highScore","started","gameEnd","scoreElement","scoreEl","useState","scoreAnimate","setScoreAnimate","state","className","useEffect","onanimationend","id","shuffle","array","n","shuffled","remaining","length","randIndex","Math","floor","random","selection","splice","push","Button","Game","setScore","setStarted","setHighScore","setGameEnd","selectedCards","setSelectedCards","stopGame","gameEndState","Set","incrementScore","newScore","size","has","StyledHeader","header","App","document","ENV","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1557537d.chunk.js","sourcesContent":["export default {\n  title: 'Memory Game',\n  heading: 'Memory Game',\n  cards: [\n    {\n      img: {\n        src:\n          'https://upload.wikimedia.org/wikipedia/commons/thumb/a/a7/React-icon.svg/1280px-React-icon.svg.png',\n        alt: 'React logo',\n      },\n      caption: 'React',\n    },\n    {\n      img: {\n        src:\n          'https://upload.wikimedia.org/wikipedia/commons/6/6a/JavaScript-logo.png',\n        alt: 'Javascript logo',\n      },\n      caption: 'JavaScript',\n    },\n    {\n      img: {\n        src:\n          'https://upload.wikimedia.org/wikipedia/commons/thumb/7/73/Ruby_logo.svg/1280px-Ruby_logo.svg.png',\n        alt: 'Ruby logo',\n      },\n      caption: 'Ruby',\n    },\n    {\n      img: {\n        src:\n          'https://upload.wikimedia.org/wikipedia/commons/thumb/c/c3/Python-logo-notext.svg/500px-Python-logo-notext.svg.png',\n        alt: 'Python logo',\n      },\n      caption: 'Python',\n    },\n    {\n      img: {\n        src:\n          'https://lh3.googleusercontent.com/Nn-_IMiFyvY4omQ90_x7UNF2vF6f_-yIXHaeztzsb1-Sr9PckFsOQezjxtO0KZ6wyOaU',\n        alt: 'Java logo',\n      },\n      caption: 'Java',\n    },\n    {\n      img: {\n        src:\n          'https://pbs.twimg.com/profile_images/554798224154701824/mWd3laxO.png',\n        alt: 'Go logo',\n      },\n      caption: 'Go',\n    },\n    {\n      img: {\n        src: 'https://icon-library.com/images/html5-icon/html5-icon-13.jpg',\n        alt: 'HTML logo',\n      },\n      caption: 'HTML',\n    },\n    {\n      img: {\n        src: 'https://logodix.com/logo/1111675.png',\n        alt: 'CSS logo',\n      },\n      caption: 'CSS',\n    },\n    {\n      img: {\n        src:\n          'https://upload.wikimedia.org/wikipedia/commons/thumb/4/4c/Typescript_logo_2020.svg/1200px-Typescript_logo_2020.svg.png',\n        alt: 'TypeScript logo',\n      },\n      caption: 'TypeScript',\n    },\n  ],\n};\n","import styled from 'styled-components';\nimport 'react-aspect-ratio/aspect-ratio.css';\nimport AspectRatio from 'react-aspect-ratio';\nimport { useRef } from 'react';\n\nconst StyledCard = styled.button`\n  background: #FFF;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  border: 2px solid black;\n  border-radius: 0.5em;\n  padding: 1.5em 1.5em 0 1.5em;\n\n  &:focus {\n    border: 0;\n    outline-color: orange;\n  }\n\n  &:hover {\n    cursor: pointer;\n  }\n\n  figcaption {\n    padding: 0.25em 0;\n    font-weight: 600;\n    font-size: 2rem;\n  }\n\n  @media screen and (max-width: 650px) {\n    figcaption {\n      font-size: 1.5rem;\n    }\n  }\n\n  @media screen and (max-width: 500px) {\n    figcaption {\n      font-size: 1rem;\n    }\n  }\n`;\n\nconst StyledAspectRatio = styled(AspectRatio)`\n  width: 100%;\n\n  img {\n    object-fit: cover;\n  }\n`;\n\nfunction Card({ img: { src, alt }, caption, onClick }) {\n  const cardEl = useRef(null);\n\n  return (\n    <StyledCard\n      onClick={onClick}\n      aria-label={caption}\n      onMouseEnter={() => cardEl.current.focus()}\n      onMouseLeave={() => cardEl.current.blur()}\n      ref={cardEl}\n    >\n      <StyledAspectRatio ratio={1}>\n        <img src={src} alt={alt} draggable=\"false\" />\n      </StyledAspectRatio>\n      <figcaption>{caption}</figcaption>\n    </StyledCard>\n  );\n}\n\nexport default Card;\n","import styled from 'styled-components';\nimport Card from './card';\n\nconst StyledCards = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, minmax(100px, 1fr));\n  grid-gap: 0.5em;\n\n  @media screen and (min-width: 1024px) {\n    grid-template-columns: repeat(5, 1fr);\n  }\n`;\n\nfunction Cards({ cards, selectCard, ...props }) {\n  return (\n    <StyledCards {...props}>\n      {cards.map((card, index) => (\n        <Card\n          img={card.img}\n          caption={card.caption}\n          key={index}\n          onClick={() => selectCard(card)}\n        />\n      ))}\n    </StyledCards>\n  );\n}\n\nexport default Cards;\n","import styled from 'styled-components';\nimport { useState, useEffect, useRef } from 'react';\n\nconst StyledScores = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background-color: #565264;\n  width: 100vw;\n  font-size: 3em;\n  color: white;\n  padding: 0.25em;\n`;\n\nconst StyledBaseScore = styled.div`\n  text-transform: uppercase;\n  font-weight: bold;\n`;\n\nconst StyledScore = styled(StyledBaseScore)`\n  ${({ animate }) =>\n    animate &&\n    `animation: correct-answer 0.2s;\n\n    @keyframes correct-answer {\n      0% {\n        color: #00a878;\n      }\n      100% {\n        color: white;\n      }\n    }`}\n`;\n\nconst StyledHighScore = styled(StyledBaseScore)`\n  font-weight: inherit;\n  font-size: 0.5em;\n`;\n\nconst StyledGameOver = styled(StyledBaseScore)`\n  font-size: 0.75em;\n  animation: game-over 0.2s;\n  text-align: center;\n\n  .game-over {\n    font-size: 3em;\n  }\n\n  .message {\n    font-weight: 500;\n  }\n\n  @keyframes game-over {\n    0% {\n      color: red;\n    }\n    100% {\n      color: white;\n    }\n  } ;\n`;\n\nconst StyledWinMessage = styled(StyledBaseScore)`\n  text-align: center;\n  font-size: 4em;\n  margin-bottom: 0.1em;\n\n  .score-message {\n    font-size: 0.3em;\n  }\n\n  animation: correct-answer 0.2s;\n\n  @keyframes correct-answer {\n    0% {\n      color: #00a878;\n    }\n    100% {\n      color: white;\n    }\n  }\n`;\n\nfunction Scores({ score, highScore, started, gameEnd }) {\n  let scoreElement = null;\n  let scoreEl = useRef(null);\n  let [scoreAnimate, setScoreAnimate] = useState(started);\n\n  if (started) {\n    scoreElement = (\n      <StyledScore animate={scoreAnimate} ref={scoreEl}>\n        Score: {score}\n      </StyledScore>\n    );\n  } else if (gameEnd) {\n    switch (gameEnd.state) {\n      case 'game over':\n        scoreElement = (\n          <StyledGameOver>\n            <div className=\"game-over\">Game Over!</div>\n            <div className=\"message\">\n              You picked {gameEnd.card.caption} already.\n            </div>\n            <div className=\"message\">Your final score is {gameEnd.score}</div>\n          </StyledGameOver>\n        );\n        break;\n      case 'win':\n        scoreElement = (\n          <StyledWinMessage animate=\"true\">\n            <div className=\"win-message\">You win!</div>\n            <div className=\"score-message\">\n              Your final score is {gameEnd.score}\n            </div>\n          </StyledWinMessage>\n        );\n        break;\n    }\n  }\n\n  useEffect(() => {\n    if (score > 0) {\n      setScoreAnimate(true);\n      scoreEl.current.onanimationend = () => {\n        setScoreAnimate(false);\n      };\n    }\n  }, [score]);\n\n  useEffect(() => {\n    if (started) {\n      setScoreAnimate(false);\n    }\n  }, [started]);\n\n  return (\n    <StyledScores id=\"scores\">\n      {scoreElement}\n      <StyledHighScore>High Score: {highScore}</StyledHighScore>\n    </StyledScores>\n  );\n}\n\nexport default Scores;\n","function randInt(n) {\n  return Math.floor(Math.random() * n);\n}\n\nfunction shuffle(array) {\n  const shuffled = [];\n  const remaining = [...array];\n\n  while (remaining.length > 0) {\n    const randIndex = randInt(remaining.length);\n    const selection = remaining[randIndex];\n\n    remaining.splice(randIndex, 1);\n\n    shuffled.push(selection);\n  }\n\n  return shuffled;\n}\n\nexport { shuffle }\n","import { useState, useEffect } from 'react';\nimport Cards from './cards';\nimport Scores from './scores';\nimport { shuffle } from '../helpers';\nimport styled from 'styled-components';\n\nconst Button = styled.button`\n  width: 100%;\n  background: #faf3dd;\n  border: 0;\n  font-size: 2.5em;\n  text-transform: uppercase;\n  font-weight: 600;\n  color: #0088cc;\n  box-shadow: 0 -2px 10px #333;\n  cursor: pointer;\n\n  &:focus {\n    outline-color: #0088cc;\n  }\n\n  &:hover {\n    background: #fcf9ed;\n    box-shadow: 0 -2px 15px #333;\n    color: #007ab8;\n  }\n`;\n\nfunction Game({ cards }) {\n  const [score, setScore] = useState(null);\n  const [started, setStarted] = useState(false);\n  const [highScore, setHighScore] = useState(0);\n  const [gameEnd, setGameEnd] = useState(false);\n  const [selectedCards, setSelectedCards] = useState(null);\n\n  function startGame() {\n    return () => {\n      setStarted(true);\n      setScore(0);\n      setGameEnd(false);\n      setSelectedCards(new Set());\n    };\n  }\n\n  function stopGame(gameEndState = false) {\n    return () => {\n      setStarted(false);\n      setScore(null);\n      setGameEnd(gameEndState);\n      setSelectedCards(new Set());\n    };\n  }\n\n  function selectCard(card) {\n    if (selectedCards.has(card)) {\n      stopGame({ card, score, state: 'game over' })();\n    } else {\n      incrementScore();\n      setSelectedCards(new Set([...selectedCards, card]));\n    }\n  }\n\n  function incrementScore() {\n    const newScore = score + 1;\n    setScore(newScore);\n\n    if (newScore > highScore) {\n      setHighScore(newScore);\n    }\n  }\n\n  useEffect(() => {\n    if (started && selectedCards.size === cards.length) {\n      stopGame({ score: cards.length, state: 'win' })();\n    }\n  }, [started, selectedCards, cards]);\n\n  return (\n    <div id=\"game\">\n      {started ? (\n        <Button onClick={stopGame(false)}>Reset</Button>\n      ) : (\n        <Button onClick={startGame()}>Start game</Button>\n      )}\n      <Scores\n        score={score}\n        highScore={highScore}\n        started={started}\n        gameEnd={gameEnd}\n      />\n      {started && (\n        <Cards\n          className=\"container\"\n          cards={shuffle(cards)}\n          incrementScore={incrementScore}\n          selectCard={selectCard}\n        />\n      )}\n    </div>\n  );\n}\nexport default Game;\n","import './App.css';\nimport { useEffect } from 'react';\nimport ENV from './config';\nimport Game from './components/game';\nimport styled from 'styled-components';\n\nconst StyledHeader = styled.header`\n  text-align: center;\n  background: #008dd5;\n  padding: 0.4em;\n\n  h1 {\n    color: #f6f6f6;\n    font-size: 3.5em;\n    margin: 0;\n  }\n`;\n\nfunction App() {\n  useEffect(() => {\n    document.title = ENV['title'];\n  }, []);\n\n  return (\n    <>\n      <StyledHeader>\n        <h1>{ENV['heading']}</h1>\n      </StyledHeader>\n      <main>\n        <Game cards={ENV['cards']} />\n      </main>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}